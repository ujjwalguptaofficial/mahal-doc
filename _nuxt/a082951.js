(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{214:function(e,t,r){"use strict";r.r(t);var o={components:{Layout:r(176).a}},n=r(14),component=Object(n.a)(o,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("Layout",{attrs:{title:"Formatter",description:"Formatter can be used to convert one value to another value in UI",keywords:"formatter, component, mahal",contentSrc:"/home/runner/work/mahal-doc/mahal-doc/content/docs/basic/formatter.md"}},[r("h1",{attrs:{id:"formatter"}},[e._v("Formatter")]),e._v(" "),r("p",[e._v("A formatter is a method which can be used to format(convert one value to another value) in UI using "),r("strong",[e._v("pipe symbol")]),e._v(". .")]),e._v(" "),r("p",[e._v("A decorator "),r("code",{pre:!0},[e._v("Formatter")]),e._v(" is used to declare a method formatter. A formatter method accepts a parameter which is converted into some other format or value.")]),e._v(" "),r("p",[e._v("Let's create a "),r("strong",[e._v("upper")]),e._v(" formatter which will convert a value into upper case.")]),e._v(" "),r("pre",[r("code",{pre:!0},[e._v('<html>\n    <div :data-name="name | upper">My name is {{name | upper}}</div>\n</html>\n<script>\nimport {Component, Formatter } from "mahal"\nexport class MyComponent extends Component {\n\n    name = "ujjwal gupta"\n\n    @Formatter(\'upper\')\n    toUpper(value){\n        return value.toUpperCase();\n    }\n\n}\n<\/script>\n')])]),e._v(" "),r("p",[e._v("ðŸ‘‰ A formatter can be used in "),r("code",{pre:!0},[e._v("text binding")]),e._v(" and "),r("code",{pre:!0},[e._v("attributes")]),e._v(". ")]),e._v(" "),r("h2",{attrs:{id:"multipleformatter"}},[e._v("Multiple formatter")]),e._v(" "),r("p",[e._v("Multiple formatter can be used at a time, which will pass the value from one formatter to another in the same way as declared for use in html code.")]),e._v(" "),r("p",[e._v("Consider a case where a numeric value needs to be - ")]),e._v(" "),r("ol",[r("li",[e._v("Round off (remove decimal value)")]),e._v(" "),r("li",[e._v("Add the dollar symbol")])]),e._v(" "),r("pre",[r("code",{pre:!0},[e._v("<html>\n    <div>Amount is {{name | round | dollar}}</div>\n</html>\n<script>\nimport {Component, Formatter } from \"mahal\"\nexport class MyComponent extends Component {\n\n    amount = 5.12345678\n\n    @Formatter('round')\n    roundValue(value){\n        return Math.round(value);\n    }\n\n    @Formatter('dollar')\n    addDollarSymbol(value){\n        return Math.dollar(value);\n    }\n\n}\n<\/script>\n")])]),e._v(" "),r("h2",{attrs:{id:"globalformatter"}},[e._v("Global formatter")]),e._v(" "),r("p",[e._v("A formatter can be also registered globally, so that it can be used in all components. ")]),e._v(" "),r("pre",[r("code",{pre:!0},[e._v('export const app = new Mahal(Main, document.querySelector(\'#app\'));\napp.extend.formatter("dollar", (value: string) => {\n    return "$" + value;\n});\n')])])])}),[],!1,null,null,null);t.default=component.exports}}]);