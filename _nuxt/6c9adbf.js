(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{202:function(n,t,e){"use strict";e.r(t);var o={components:{Layout:e(176).a}},c=e(14),component=Object(c.a)(o,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("Layout",{attrs:{title:"Dynamic Component",description:"Get started with mahal",keywords:"mahal",contentSrc:"/home/runner/work/mahal-doc/mahal-doc/content/docs/advanced/dynamic-component.md"}},[e("h1",{attrs:{id:"dynamiccomponent"}},[n._v("Dynamic Component")]),n._v(" "),e("p",[n._v("Mahal provides a special component "),e("strong",[n._v("in-place")]),n._v(" which can be used for rendering dynamic component.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('<html>\n<div>\n    <button @click="changeComponent">Change Tab</button>\n    <in-place :of="compName" />\n</div>\n</html>\n<script>\nimport { Component, Children, Reactive } from "mahal"\nimport Comp1 from "comp1.mahal"\nimport Comp2 from "comp2.mahal"\n\n@Children({\n    Comp1, Comp2\n})\nexport class MyComponent extends Component {\n\n    @Reactive\n    compName = \'Comp1\'\n\n    changeComponent(){\n        this.compName = \'Comp2\'\n    }\n\n}\n<\/script>\n')])]),n._v(" "),e("h2",{attrs:{id:"example"}},[n._v("Example")]),n._v(" "),e("p",[n._v("One of common use case of dynamic component is tab implementation.")]),n._v(" "),e("p",[n._v("Let's say we have two tabs - "),e("code",{pre:!0},[n._v("Tab1")]),n._v(", "),e("code",{pre:!0},[n._v("Tab2")]),n._v(" and we want to render related component "),e("code",{pre:!0},[n._v("Tab1Data")]),n._v(", "),e("code",{pre:!0},[n._v("Tab2Data")]),n._v(" based on which tab is active.")]),n._v(" "),e("pre",[e("code",{pre:!0},[n._v('<html>\n<div>\n   <div class="tabs">\n        <div class="tabs__item" :for(tab in tabs) @click="changeTab(tab)">\n          {{tab}}\n        </div>\n   </div>\n   <div class="tabs-content">\n        <in-place :of="activeTab" />\n   </div>\n</div>\n</html>\n<script>\nimport { Component, Children, Reactive } from "mahal"\nimport Tab1Data from "comp1.mahal"\nimport Tab2Data from "comp2.mahal"\n\n@Children({\n    Tab1Data, Tab2Data\n})\nexport class MyComponent extends Component {\n\n    tabs = [\'tab1\', \'tab2\'];\n\n    tabCompList = [\'Tab1Data\', \'Tab2Data\'];\n\n    @Reactive\n    activeTab=\'\';\n\n    onInit(){\n        this.activeTab = this.tabs[0]\n    }\n\n    changeTab(tab){\n        switch(tab){\n            case "tab1":\n                this.activeTab = this.tabCompList[0]; break;\n            case "tab2":\n                this.activeTab = this.tabCompList[1]; break;\n        }\n    }\n\n}\n<\/script>\n')])])])}),[],!1,null,null,null);t.default=component.exports}}]);