(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{214:function(e,t,n){"use strict";n.r(t);var o={components:{Layout:n(176).a}},c=n(14),component=Object(c.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Layout",{attrs:{title:"Reactive",description:"Mahal provides Reactive decorator which can be used for two way binding.",keywords:"reactive, mahal",contentSrc:"/home/runner/work/mahal-doc/mahal-doc/content/docs/basic/reactive.md"}},[n("h1",{attrs:{id:"reactive"}},[e._v("Reactive")]),e._v(" "),n("p",[e._v("By default a component variable are not reactive which means if you will change the value - it won't be updated in the UI.")]),e._v(" "),n("p",[e._v("You can use "),n("code",{pre:!0},[e._v("setState")]),e._v(" method to trigger the update but this increase the responsibility and code size ofcourse.")]),e._v(" "),n("p",[e._v("A variable can be made reactive by using a decorator - "),n("code",{pre:!0},[e._v("Reactive")])]),e._v(" "),n("pre",[n("code",{pre:!0},[e._v('<html>\n    <div>My name is {{name}}</div>\n    <button @click="changeName">Change name</button>\n</html>\n\n<script>\nimport {Component, Reactive } from "mahal"\nexport default class MainComponent extends Component {\n\n    @Reactive\n    name = "ujjwal gupta"\n\n    changeName(){\n        this.name="DC is love."\n    }\n}\n<\/script>\n')])])])}),[],!1,null,null,null);t.default=component.exports}}]);