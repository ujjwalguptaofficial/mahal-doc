(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{206:function(e,n,t){"use strict";t.r(n);var o={components:{Layout:t(176).a}},r=t(14),component=Object(r.a)(o,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("Layout",{attrs:{title:"Component",description:"A Component is reusable piece of UI code and acts as buliding block for your app",keywords:"mahal, component",contentSrc:"/home/runner/work/mahal-doc/mahal-doc/content/docs/basic/component.md"}},[t("h1",{attrs:{id:"component"}},[e._v("Component")]),e._v(" "),t("p",[e._v("A Component is reusable piece of UI code and acts as buliding block for your app. A single component contains - ")]),e._v(" "),t("ol",[t("li",[e._v("HTML - html code to represent UI.")]),e._v(" "),t("li",[e._v("Script - javascript code for handling logic")]),e._v(" "),t("li",[e._v("Style - css code for styling the UI.")])]),e._v(" "),t("p",[t("br"),e._v("\nLet's see an example of simple component - ")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('<html>\n    <div class="flex">My name is {{name}}</div>\n</html>\n<script>\nimport {Component} from "mahal"\nexport default class MainComponent extends Component {\n    name = "ujjwal gupta"\n}\n<\/script>\n<style>\n.name{\n    color:maroon;\n    background:white;\n}\n</style>\n')])]),e._v(" "),t("p",[e._v("The above code will render the variable "),t("code",{pre:!0},[e._v("name")]),e._v(" from the component script in the UI. ")]),e._v(" "),t("p",[e._v("ðŸ‘‰ Let's understand some of regular usable concepts - ")]),e._v(" "),t("h2",{attrs:{id:"attributes"}},[e._v("Attributes")]),e._v(" "),t("p",[e._v("You can set the attributes in the UI as you do regular in HTML.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('<html>\n    <div name="ujjwal">Ujjwal Gupta</div>\n</html>\n')])]),e._v(" "),t("p",[e._v("You can see we have setted the "),t("code",{pre:!0},[e._v("data-name")]),e._v(" similar to how we do in html.")]),e._v(" "),t("h4",{attrs:{id:"dynamicattributes"}},[e._v("Dynamic Attributes")]),e._v(" "),t("p",[e._v("Sometimes we need to set the attributes from the variable. You can use "),t("code",{pre:!0},[e._v(":")]),e._v(" syntax for setting dynamic attribute.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('<html>\n    <div :name="userName">Ujjwal Gupta</div>\n</html>\n<script>\nimport {Component} from "mahal"\nexport default class MainComponent extends Component {\n    userName = "ujjwal gupta"\n}\n<\/script>\n')])]),e._v(" "),t("p",[e._v("The "),t("code",{pre:!0},[e._v(":")]),e._v(" is known as "),t("code",{pre:!0},[e._v("bind")]),e._v(". So when pronouncing you can call - "),t("strong",[e._v("bind name attribute with userName state")])]),e._v(" "),t("h2",{attrs:{id:"oninit"}},[e._v("onInit")]),e._v(" "),t("p",[e._v("every component has "),t("code",{pre:!0},[e._v("onInit")]),e._v(" method which is called just after the constructor. The difference between constructor and onInit is  - "),t("code",{pre:!0},[e._v("onInit")]),e._v(" is called by mahal framework - thus value of "),t("code",{pre:!0},[e._v("this")]),e._v(" is proxy object, so if you call any method or change state then reactivity will be triggered.")]),e._v(" "),t("p",[e._v("It is recommended to use "),t("code",{pre:!0},[e._v("onInit")]),e._v(" method to call any methods at the start. Alternatively you can also use different lifecycle event.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('<html>\n    <div data-name="ujjwal">Ujjwal Gupta</div>\n</html>\n<script>\nimport {Component} from "mahal"\nexport default class MainComponent extends Component {\n    name = "ujjwal gupta"\n\n    onInit(){\n        console.log(\'on init called\')\n    }\n}\n<\/script>\n')])]),e._v(" "),t("h2",{attrs:{id:"textbinding"}},[e._v("Text Binding")]),e._v(" "),t("p",[e._v("For binding a text with state - you can use double curly braces also known as mustache syntax.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('<html>\n    <div class="flex">My name is {{name}}</div>\n    <div class="flex">I am from India.</div>\n</html>\n<script>\nimport {Component} from "mahal"\nexport default class MainComponent extends Component {\n    name = "ujjwal gupta"\n}\n<\/script>\n')])]),e._v(" "),t("h2",{attrs:{id:"nestedcomponents"}},[e._v("Nested Components")]),e._v(" "),t("p",[e._v("A component can render another component or list of component. This allows us to reuse a component.")]),e._v(" "),t("p",[e._v("e.g - Let's say we have a "),t("code",{pre:!0},[e._v("root")]),e._v(" component, which wants to render the "),t("code",{pre:!0},[e._v("home")]),e._v(" component.")]),e._v(" "),t("p",[e._v("In order to render a component, you need to do following steps - ")]),e._v(" "),t("ol",[t("li",[e._v("Import the component")]),e._v(" "),t("li",[e._v("Use "),t("code",{pre:!0},[e._v("Children")]),e._v(" decorator to declare it as child.")])]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('<html>\n   <Home/>\n</html>\n\n<script>\nimport { Component, Children } from "mahal"\nimport Home from "./components/home.mahal"\n\n@Children({\n   Home\n})\nexport default class MainComponent extends Component {\n    name = "ujjwal gupta"\n}\n<\/script>\n')])]),e._v(" "),t("h3",{attrs:{id:"registercomponentglobally"}},[e._v("Register component globally")]),e._v(" "),t("p",[e._v("You can also register a component globally which will remove the necessity to import components at every place.")]),e._v(" "),t("pre",[t("code",{pre:!0},[e._v('import Home from "./components/home.mahal"\n\nexport const app = new Mahal(Main, document.querySelector(\'#app\'));\n// register component globally\napp.extend.component("Home", Home);\n')])])])}),[],!1,null,null,null);n.default=component.exports}}]);