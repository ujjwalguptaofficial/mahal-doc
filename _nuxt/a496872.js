(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{226:function(t,n,e){"use strict";e.r(n);var o={components:{Layout:e(176).a}},m=e(14),component=Object(m.a)(o,(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("Layout",{attrs:{title:"Store Mutation",description:"The Mutation decorator can be used to map the mutation value.",keywords:"mahal, store, mutation",contentSrc:"/home/runner/work/mahal-doc/mahal-doc/content/docs/store/mutation.md"}},[e("h1",{attrs:{id:"mutation"}},[t._v("Mutation")]),t._v(" "),e("p",[t._v("The "),e("code",{pre:!0},[t._v("Mutation")]),t._v(" decorator can be used to map the mutation value.")]),t._v(" "),e("pre",[e("code",{pre:!0},[t._v('<html>\n<div>\n    <input type="text" :value="name" @input="onNameInput" />\n    <div>{{name}}</div>\n</div>\n</html>\n\n<script>\nimport { Component, Computed, Reactive } from "mahal";\nimport { State, Mutation } from "@mahaljs/store";\n\nexport default class extends Component {\n\n    // map with `name` state\n    @State(\'name\') name;\n\n    @Mutation(\'name\') setName;\n\n    onNameInput(e){\n        const value = e.target.value;\n        this.setName(value);\n    }\n}\n<\/script>\n')])])])}),[],!1,null,null,null);n.default=component.exports}}]);