(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{206:function(n,e,t){"use strict";t.r(e);var o={components:{Layout:t(176).a}},c=t(14),component=Object(c.a)(o,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("Layout",{attrs:{title:"Watch",description:"watch is a method of component, which allows to watch a state change.",keywords:"watch, unwatch, state, mahal",contentSrc:"/home/runner/work/mahal-doc/mahal-doc/content/docs/advanced/watch.md"}},[t("h1",{attrs:{id:"watch"}},[n._v("watch")]),n._v(" "),t("p",[t("code",{pre:!0},[n._v("watch")]),n._v(" is a method of component, which allows to watch a state change. It emits newvalue and oldValue.")]),n._v(" "),t("pre",[t("code",{pre:!0},[n._v('import { Component } from "mahal"\n\nexport default class MainComponent extends Component {\n    name = "ujjwal gupta"\n\n    onInit(){\n        this.watch(\'name\', (newValue, oldValue)=>{\n\n        })\n    }\n}\n')])]),n._v(" "),t("p",[n._v("Alternatively, you can also use "),t("code",{pre:!0},[n._v("Watch")]),n._v(" decorator from "),t("a",{attrs:{href:"https://github.com/ujjwalguptaofficial/mahaljs-util"}},[n._v("mahaljs-util")]),n._v(".")]),n._v(" "),t("pre",[t("code",{pre:!0},[n._v('import { Component } from "mahal"\nimport { watch } from "@mahaljs/util"\n\nexport default class MainComponent extends Component {\n    name = "ujjwal gupta"\n\n    @watch(\'name\')\n    onNameChange(newValue, oldValue){\n\n    }\n}\n')])]),n._v(" "),t("h2",{attrs:{id:"unwatch"}},[n._v("unwatch")]),n._v(" "),t("p",[t("code",{pre:!0},[n._v("unwatch")]),n._v(" allows you to remove watch or unsubscibe to watch. You need to provide the "),t("code",{pre:!0},[n._v("state")]),n._v(" and same "),t("code",{pre:!0},[n._v("event listener")]),n._v(" which was used to watch the state.")]),n._v(" "),t("pre",[t("code",{pre:!0},[n._v("import { Component } from \"mahal\"\n\nexport default class MainComponent extends Component {\n    name = \"ujjwal gupta\"\n\n    onInit(){\n        this.watch('name', this.onNameChange)\n    }\n\n    onNameChange(newValue, oldValue){\n\n    }\n\n\n    unWatchName(){\n        this.unwatch('name',this.onNameChange)\n    }\n}\n")])])])}),[],!1,null,null,null);e.default=component.exports}}]);